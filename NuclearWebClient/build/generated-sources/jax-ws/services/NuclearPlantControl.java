
package services;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NuclearPlantControl", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NuclearPlantControl {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "restartAll", targetNamespace = "http://services/", className = "services.RestartAll")
    @ResponseWrapper(localName = "restartAllResponse", targetNamespace = "http://services/", className = "services.RestartAllResponse")
    @Action(input = "http://services/NuclearPlantControl/restartAllRequest", output = "http://services/NuclearPlantControl/restartAllResponse")
    public String restartAll();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dumpAllCores", targetNamespace = "http://services/", className = "services.DumpAllCores")
    @ResponseWrapper(localName = "dumpAllCoresResponse", targetNamespace = "http://services/", className = "services.DumpAllCoresResponse")
    @Action(input = "http://services/NuclearPlantControl/dumpAllCoresRequest", output = "http://services/NuclearPlantControl/dumpAllCoresResponse")
    public String dumpAllCores();

    /**
     * 
     * @param amountToPullOut
     * @param reactorID
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "pullOutControlRods", targetNamespace = "http://services/", className = "services.PullOutControlRods")
    @ResponseWrapper(localName = "pullOutControlRodsResponse", targetNamespace = "http://services/", className = "services.PullOutControlRodsResponse")
    @Action(input = "http://services/NuclearPlantControl/pullOutControlRodsRequest", output = "http://services/NuclearPlantControl/pullOutControlRodsResponse")
    public int pullOutControlRods(
        @WebParam(name = "reactorID", targetNamespace = "")
        int reactorID,
        @WebParam(name = "amountToPullOut", targetNamespace = "")
        int amountToPullOut);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "meltdownAll", targetNamespace = "http://services/", className = "services.MeltdownAll")
    @ResponseWrapper(localName = "meltdownAllResponse", targetNamespace = "http://services/", className = "services.MeltdownAllResponse")
    @Action(input = "http://services/NuclearPlantControl/meltdownAllRequest", output = "http://services/NuclearPlantControl/meltdownAllResponse")
    public String meltdownAll();

    /**
     * 
     * @param requestedData
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPlantStatus", targetNamespace = "http://services/", className = "services.GetPlantStatus")
    @ResponseWrapper(localName = "getPlantStatusResponse", targetNamespace = "http://services/", className = "services.GetPlantStatusResponse")
    @Action(input = "http://services/NuclearPlantControl/getPlantStatusRequest", output = "http://services/NuclearPlantControl/getPlantStatusResponse")
    public String getPlantStatus(
        @WebParam(name = "requestedData", targetNamespace = "")
        String requestedData);

    /**
     * 
     * @param coreID
     * @param onOff
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "turnCoreOnOff", targetNamespace = "http://services/", className = "services.TurnCoreOnOff")
    @Action(input = "http://services/NuclearPlantControl/turnCoreOnOff")
    public void turnCoreOnOff(
        @WebParam(name = "coreID", targetNamespace = "")
        int coreID,
        @WebParam(name = "onOff", targetNamespace = "")
        int onOff);

    /**
     * 
     * @param reactorInfo
     * @return
     *     returns services.Reactor
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReactorInfo", targetNamespace = "http://services/", className = "services.GetReactorInfo")
    @ResponseWrapper(localName = "getReactorInfoResponse", targetNamespace = "http://services/", className = "services.GetReactorInfoResponse")
    @Action(input = "http://services/NuclearPlantControl/getReactorInfoRequest", output = "http://services/NuclearPlantControl/getReactorInfoResponse")
    public Reactor getReactorInfo(
        @WebParam(name = "reactorInfo", targetNamespace = "")
        Reactor reactorInfo);

}
